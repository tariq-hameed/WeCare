// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WeCare.Data;

namespace WeCare.Migrations
{
    [DbContext(typeof(WeCareContext))]
    partial class WeCareContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("WeCare.Data.Entities.Journal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("PatientId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PatientId")
                        .IsUnique();

                    b.ToTable("Journal");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            PatientId = 1
                        });
                });

            modelBuilder.Entity("WeCare.Data.Entities.JournalEntry", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Entry")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("JournalId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("JournalId");

                    b.ToTable("JournalEntry");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Date = new DateTime(2020, 1, 3, 12, 15, 0, 0, DateTimeKind.Unspecified),
                            Entry = @"
                Patient feels uneasy and restless. Administered 5 ml of valium.
            ",
                            JournalId = 1
                        },
                        new
                        {
                            Id = 2,
                            Date = new DateTime(2020, 1, 14, 8, 30, 0, 0, DateTimeKind.Unspecified),
                            Entry = @"
                Patient complaining about not being able to sleep.
            ",
                            JournalId = 1
                        },
                        new
                        {
                            Id = 3,
                            Date = new DateTime(2020, 1, 23, 15, 15, 0, 0, DateTimeKind.Unspecified),
                            Entry = @"
                Patient returns for checkup, feeling much better now.
            ",
                            JournalId = 1
                        });
                });

            modelBuilder.Entity("WeCare.Data.Entities.Patient", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SocialSecurityNumber")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Patient");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FirstName = "Frans",
                            LastName = "Engström",
                            SocialSecurityNumber = "890101-2010"
                        });
                });

            modelBuilder.Entity("WeCare.Data.Entities.Journal", b =>
                {
                    b.HasOne("WeCare.Data.Entities.Patient", null)
                        .WithOne("Journal")
                        .HasForeignKey("WeCare.Data.Entities.Journal", "PatientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WeCare.Data.Entities.JournalEntry", b =>
                {
                    b.HasOne("WeCare.Data.Entities.Journal", null)
                        .WithMany("Entries")
                        .HasForeignKey("JournalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
